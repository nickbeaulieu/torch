/// Expect "*                            *\n*                           **\n*                          ***\n*                         ** *\n*                        *****\n*                       **   *\n*                      ***  **\n*                     ** * ***\n*                    ******* *\n*                   **     ***\n*                  ***    ** *\n*                 ** *   *****\n*                *****  **   *\n*               **   * ***  **\n*              ***  **** * ***\n*             ** * **  ***** *\n*            ******** **   ***\n*           **      ****  ** *\n*          ***     **  * *****\n*         ** *    *** ****   *\n*        *****   ** ***  *  **\n*       **   *  ***** * ** ***\n*      ***  ** **   ******** *\n*     ** * ******  **      ***\n*    *******    * ***     ** *\n*   **     *   **** *    *****\n*  ***    **  **  ***   **   *\n* ** *   *** *** ** *  ***  **\n******  ** *** ****** ** * ***\n*    * ***** ***    ******** *\n"

let current: u8[] = [30];
let next: u8[] = [30];
let i: u8 = 0;

func printCurr() -> void {
	i = 0;
	while(i < 30) {
		if (current[i] == 1) {
			print("*");
		} else {
			print(" ");
		}
		i = i + 1;
	}
	print("\n");
}

func moveNextToCurrent() -> void {
	i = 0;
	while(i < 30) {
		current[i] = next[i];
		i = i + 1;
	}
}

func main() -> int {
	current[29] = 1;
	current[0] = 1;

	let iter: int = 0;
	while(iter < 30) {
		i = 0;

		while(i < 30) {
			if (i == 0 or i == 29) {
				next[i] = 1; // use edges as a border
			} else if (current[i - 1] == 1 and current[i] == 1 and current[i + 1] == 1) {
				next[i] = 0;
			} else if (current[i - 1] == 1 and current[i] == 1 and current[i + 1] == 0) {
				next[i] = 1;
			} else if (current[i - 1] == 1 and current[i] == 0 and current[i + 1] == 1) {
				next[i] = 1;
			} else if (current[i - 1] == 1 and current[i] == 0 and current[i + 1] == 0) {
				next[i] = 0;
			} else if (current[i - 1] == 0 and current[i] == 1 and current[i + 1] == 1) {
				next[i] = 1;
			} else if (current[i - 1] == 0 and current[i] == 1 and current[i + 1] == 0) {
				next[i] = 1;
			} else if (current[i - 1] == 0 and current[i] == 0 and current[i + 1] == 1) {
				next[i] = 1;
			} else if (current[i - 1] == 0 and current[i] == 0 and current[i + 1] == 0) {
				next[i] = 0;
			}
			i = i + 1;
		}

		printCurr();
		moveNextToCurrent();

		iter = iter + 1;
	}

	return 0;
}